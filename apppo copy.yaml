# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.2.0

# NOTE: If you generated this yaml from an unprivileged and rootless podman container on an SELinux
# enabled system, check the podman generate kube man page for steps to follow to ensure that your pod/container
# has the right permissions to access the volumes added.
---
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     com.docker.official-images.bashbrew.arch/homepage: amd64
#     io.kubernetes.cri-o.TTY/homepage: 'false'
#     io.kubernetes.cri-o.TTY/traefik: 'false'
#     io.podman.annotations.autoremove/homepage: 'FALSE'
#     io.podman.annotations.autoremove/traefik: 'FALSE'
#     io.podman.annotations.init/homepage: 'FALSE'
#     io.podman.annotations.init/traefik: 'FALSE'
#     io.podman.annotations.privileged/homepage: 'FALSE'
#     io.podman.annotations.privileged/traefik: 'FALSE'
#     io.podman.annotations.publish-all/homepage: 'FALSE'
#     io.podman.annotations.publish-all/traefik: 'FALSE'
#     org.opencontainers.image.base.digest/homepage: sha256:903d3225acecaa272bbdd7273c6c312c2af8b73644058838d23a8c9e
#     org.opencontainers.image.base.name/homepage: debian:bookworm-slim
#     org.opencontainers.image.created/homepage: '2024-08-14T21:31:12Z'
#     org.opencontainers.image.revision/homepage: e78cf70ce7b73a0c9ea734c9cf8aaaa283c1cc5a
#     org.opencontainers.image.source/homepage: https://github.com/nginxinc/docker-nginx.git#e78cf70ce7b73a0c9e
#     org.opencontainers.image.url/homepage: https://hub.docker.com/_/nginx
#     org.opencontainers.image.version/homepage: 1.27.1
#   creationTimestamp: '2024-09-09T10:58:40Z'
#   labels:
#     app: apppo-pod
#   name: apppo-pod
# spec:
#   ports:
#   - name: '80'
#     nodePort: 30995
#     port: 80
#     targetPort: 80
#   - name: '8080'
#     nodePort: 30591
#     port: 8080
#     targetPort: 8080
#   selector:
#     app: apppo-pod
#   type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  # name: apppo-pod
  # labels:
  #   app: apppo-pod
  name: traefik
  labels:
    app: traefik
spec:
  containers:
  - args:
    - '--accesslog=true'
    - '--log.level=info'
    - '--providers.docker=true'
    - '--api.dashboard=true'
    - '--api.insecure=true'
    - '--entrypoints.web.address=:80'
    - '--entrypoints.mariadb.address=:3306'
    # env:
    # - name: no_proxy
    #   value: .ponet
    # - name: http_proxy
    #   value: http://10.0.0.1:80
    # - name: https_proxy
    #   value: http://10.0.0.1:80
    image: docker.io/library/traefik:v3.0
    name: traefik
    ports:
    - containerPort: 80
      hostPort: 80
      protocol: TCP
    - containerPort: 8080
      hostPort: 8070
      protocol: TCP
    # securityContext:
    #   capabilities:
    #     drop:
    #     - CAP_MKNOD
    #     - CAP_AUDIT_WRITE
    volumeMounts:
    # - mountPath: /etc/traefik/traefik.yml
    #   name: apppo-traefik.yml-host-0
    - mountPath: /var/run/docker.sock:z
      name: run-user-846632034-podman-podman.sock-host-1
  volumes:
  # - hostPath:
  #     path: ./traefik.yml
  #     type: File
  #   name: apppo-traefik.yml-host-0
  - hostPath:
      path: /run/user/846632034/podman/podman.sock
      type: File
    name: run-user-846632034-podman-podman.sock-host-1
---
apiVersion: v1
kind: Pod
metadata:
  # name: apppo-pod
  # labels:
  #   app: apppo-pod
  name: homepage
  labels:
    app: homepage
    traefik.enable: true
    traefik.http.routers.homepage.rule: PathPrefix(`/`)
    traefik.http.routers.homepage.entrypoints: web
    traefik.http.services.homepage.loadbalancer.server.port: 80
    traefik.http.routers.homepage.middlewares: strip-homepage-prefix
    traefik.http.middlewares.strip-homepage-prefix.stripPrefix.prefixes: /
spec:
  containers:
  - args:
    - nginx
    - -g
    - daemon off;
    # ports:
    # - containerPort: 80
    #   protocol: TCP
    # env:
    # - name: http_proxy
    #   value: http://10.0.0.1:80
    # - name: https_proxy
    #   value: http://10.0.0.1:80
    # - name: no_proxy
    #   value: .ponet
    image: docker.io/library/nginx:latest
    name: homepage
    # securityContext:
    #   capabilities:
    #     drop:
    #     - CAP_MKNOD
    #     - CAP_AUDIT_WRITE
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: apppo-html-host-0
    - mountPath: /etc/nginx/conf.d/default.conf
      name: apppo-default.conf-host-1
  dnsPolicy: Default
  volumes:
  - hostPath:
      path: ./html
      type: Directory
    name: apppo-html-host-0
  - hostPath:
      path: ./default.conf
      type: File
    name: apppo-default.conf-host-1
